{
  "service": {
    "service": "appsync-serverless-backend",
    "serviceObject": {
      "name": "appsync-serverless-backend"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "profile": "zakii",
      "stage": "development",
      "region": "us-east-1",
      "stackName": "appsync-serverless-backend-development",
      "versionFunctions": true,
      "environment": {
        "AWS_PROFILE": "zakii",
        "AWS_REGION": "us-east-1",
        "NODE_ENV": "develpoment",
        "BOOKS_DYNAMODB_TABLE": "books",
        "ORDERS_DYNAMODB_TABLE": "orders",
        "APP_SYNC_API_NAME": "book-store-api",
        "BOOKS_DYNAMODB_TABLE_SOURCE": "booksSource",
        "ORDERS_DYNAMODB_TABLE_SOURCE": "ordersSource"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "booksTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "books",
              "AttributeDefinitions": [
                {
                  "AttributeName": "bookId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "author",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "publishedYear",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "volume",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "createdAt",
                  "AttributeType": "S"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "KeySchema": [
                {
                  "AttributeName": "bookId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "createdAt",
                  "KeyType": "RANGE"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "byAuthor",
                  "KeySchema": [
                    {
                      "AttributeName": "author",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "createdAt",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                },
                {
                  "IndexName": "byYear",
                  "KeySchema": [
                    {
                      "AttributeName": "publishedYear",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "createdAt",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "LocalSecondaryIndexes": [
                {
                  "IndexName": "byVolume",
                  "KeySchema": [
                    {
                      "AttributeName": "bookId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "volume",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "books-table"
                }
              ]
            }
          },
          "ordersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "orders",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "orderId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "bookId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdAt",
                  "AttributeType": "S"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "orderId",
                  "KeyType": "RANGE"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "byOrder",
                  "KeySchema": [
                    {
                      "AttributeName": "bookId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "createdAt",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "orders-table"
                }
              ]
            }
          },
          "cognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "BookStoreUserPool",
              "UsernameAttributes": [
                "email"
              ]
            }
          },
          "cognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "WebApiClient",
              "UserPoolId": {
                "Ref": "cognitoUserPool"
              }
            }
          },
          "cognitoAdminGroup": {
            "Type": "AWS::Cognito::UserPoolGroup",
            "Properties": {
              "Description": "Admins so they can create, read, update and delete records from db",
              "GroupName": "Admin",
              "Precedence": 0,
              "RoleArn": {
                "Fn::GetAtt": [
                  "iamRoleForCognitoAdminGroup",
                  "Arn"
                ]
              },
              "UserPoolId": {
                "Ref": "cognitoUserPool"
              }
            }
          },
          "iamRoleForCognitoAdminGroup": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "BookStoreAdminRole",
              "Description": "IAM Role For Cognito Admin Group",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Federated": [
                        "cognito-identity.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRoleWithWebIdentity"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "BookStoreAdminPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": "dynamodb:*",
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "booksTable",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "ordersTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "cognitoCustomerGroup": {
            "Type": "AWS::Cognito::UserPoolGroup",
            "Properties": {
              "Description": "Customer so they can only read records from db",
              "GroupName": "Customer",
              "Precedence": 1,
              "RoleArn": {
                "Fn::GetAtt": [
                  "iamRoleForCognitoCustomerGroup",
                  "Arn"
                ]
              },
              "UserPoolId": {
                "Ref": "cognitoUserPool"
              }
            }
          },
          "iamRoleForCognitoCustomerGroup": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "BookStoreCustomerRole",
              "Description": "IAM Role For Cognito Customer Group",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Federated": [
                        "cognito-identity.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRoleWithWebIdentity"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "BookStoreCustomerPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": "dynamodb:*",
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "ordersTable",
                              "Arn"
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem",
                          "dynamodb:Query",
                          "dynamodb:BatchGetItem"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "booksTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "iamRoleForAppSyncCloudWatchLogs": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "AppSyncCloudWatchLogsRole",
              "Description": "IAM Role For Allowing AppSync to push logs to CloudWatch",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "appsync.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "AppSyncCloudWatchLogsPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "GraphQlApi": {
            "Type": "AWS::AppSync::GraphQLApi",
            "Properties": {
              "Name": "book-store-api",
              "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
              "AdditionalAuthenticationProviders": [],
              "UserPoolConfig": {
                "AwsRegion": "us-east-1",
                "UserPoolId": {
                  "Ref": "cognitoUserPool"
                },
                "DefaultAction": "ALLOW"
              },
              "LogConfig": {
                "CloudWatchLogsRoleArn": {
                  "Fn::GetAtt": [
                    "iamRoleForAppSyncCloudWatchLogs",
                    "Arn"
                  ]
                },
                "FieldLogLevel": "ALL",
                "ExcludeVerboseContent": false
              },
              "XrayEnabled": true
            }
          },
          "GraphQlApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": {
                "Fn::Join": [
                  "/",
                  [
                    "/aws/appsync/apis",
                    {
                      "Fn::GetAtt": [
                        "GraphQlApi",
                        "ApiId"
                      ]
                    }
                  ]
                ]
              }
            }
          },
          "GraphQlSchema": {
            "Type": "AWS::AppSync::GraphQLSchema",
            "Properties": {
              "Definition": "schema {\n  query: Query\n  mutation: Mutation\n}\n\ntype Mutation {\n  createBook(newBook: BookInput): Book! @aws_auth(cognito_groups: [\"Admin\"])\n  createOrder(newOrder: OrderInput): Boolean! @aws_auth(cognito_groups: [\"Customer\"])\n}\n\ntype Query {\n  getBookById(id: ID!): Book!\n  listBooks(limit: Int!, page: Int!): BooksPage!\n  getOrderById(id: ID!): OrderItem!\n  myOrders(limit: Int!, page: Int!): OrdersPage!\n}\n\ninput OrderInput {\n  items: [OrderItemInput]\n}\n\ninput OrderItemInput {\n  bookId: ID!\n  quantity: Int!\n}\n\ninput BookInput {\n  title: String!\n  description: String\n  imageUrl: AWSURL!\n  author: String!\n  price: Float!\n  volume: Int!\n  status: BookStatus\n}\n\nenum BookStatus {\n  Available\n  NotAvailable\n}\n\ntype OrdersPage {\n  orders: [OrderItem]\n  page: Int\n}\n\ntype OrderItem implements CreateUpdateI {\n  userId: ID!\n  orderId: ID!\n  book: Book!\n  quantity: Int!\n  createedAt: String!\n  updatedAt: String!\n}\n\ntype BooksPage {\n  books: [Book]\n  page: Int\n}\n\ntype Book implements CreateUpdateI {\n  bookId: ID!\n  title: String!\n  description: String\n  imageUrl: AWSURL\n  author: String!\n  price: Float!\n  volume: Int!\n  createedAt: String!\n  updatedAt: String!\n}\n\ninterface CreateUpdateI {\n  createedAt: String!\n  updatedAt: String!\n}",
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              }
            }
          },
          "GraphQlDsbooksSourceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "appsync.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "GraphQlDsbooksSourcePolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Action": [
                          "dynamodb:DeleteItem",
                          "dynamodb:GetItem",
                          "dynamodb:PutItem",
                          "dynamodb:Query",
                          "dynamodb:Scan",
                          "dynamodb:UpdateItem",
                          "dynamodb:BatchGetItem",
                          "dynamodb:BatchWriteItem",
                          "dynamodb:ConditionCheckItem"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                          {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                "aws",
                                "dynamodb",
                                "us-east-1",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "table",
                                      {
                                        "Ref": "booksTable"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "/",
                              [
                                {
                                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphQlDsbooksSourceRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][0][\"Resource\"][0]"
                                },
                                "*"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "GraphQlDsbooksSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "Name": "booksSource",
              "Type": "AMAZON_DYNAMODB",
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "GraphQlDsbooksSourceRole",
                  "Arn"
                ]
              },
              "DynamoDBConfig": {
                "AwsRegion": "us-east-1",
                "TableName": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphQlDsbooksSourceRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][0][\"Resource\"][0][\"Fn::Join\"][1][5][\"Fn::Join\"][1][1]"
                },
                "UseCallerCredentials": false,
                "Versioned": false
              }
            }
          },
          "GraphQlResolverQuerygetBookById": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Query",
              "FieldName": "getBookById",
              "RequestMappingTemplate": "{\r\n    \"version\" : \"2017-02-28\",\r\n    \"operation\" : \"GetItem\",\r\n    \"key\" : {\r\n        \"bookId\" : $util.dynamodb.toDynamoDBJson($ctx.args.id)\r\n    }\r\n}",
              "ResponseMappingTemplate": "## Raise a GraphQL field error in case of a datasource invocation error\r\n#if($ctx.error)\r\n    $util.error($ctx.error.message, $ctx.error.type)\r\n#end\r\n\r\n$util.toJson($ctx.result)",
              "Kind": "UNIT",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsbooksSource",
                  "Name"
                ]
              }
            }
          },
          "GraphQlResolverMutationcreateBook": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Mutation",
              "FieldName": "createBook",
              "RequestMappingTemplate": "{\r\n    \"version\" : \"2017-02-28\",\r\n    \"operation\" : \"PutItem\",\r\n    \"key\": {\r\n        \"bookId\" : $util.dynamodb.toDynamoDBJson($util.autoId())\r\n    },\r\n    \"attributeValues\" : {\r\n        \"title\": $util.dynamodb.toDynamoDBJson(\"$ctx.args.newBook.title\"),\r\n        \"description\": $util.dynamodb.toDynamoDBJson(\"$ctx.args.newBook.description\"),\r\n        \"imageUrl\": $util.dynamodb.toDynamoDBJson($ctx.args.newBook.imageUrl),\r\n        \"author\": $util.dynamodb.toDynamoDBJson(\"$ctx.args.newBook.author\"),\r\n        \"price\": $util.dynamodb.toDynamoDBJson($ctx.args.newBook.price),\r\n        \"volume\": $util.dynamodb.toDynamoDBJson($ctx.args.newBook.volume),\r\n        \"createdAt\": $util.dynamodb.toDynamoDBJson(\"$util.time.nowEpochMilliSeconds()\"),\r\n        \"updatedAt\": $util.dynamodb.toDynamoDBJson(\"$util.time.nowEpochMilliSeconds()\")\r\n    }\r\n}",
              "ResponseMappingTemplate": "$util.toJson($ctx.result)",
              "Kind": "UNIT",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsbooksSource",
                  "Name"
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-appsync-serverless-backend-development-ServerlessDeploymentBucketName"
            }
          },
          "GraphQlApiId": {
            "Value": {
              "Fn::GetAtt": [
                "GraphQlApi",
                "ApiId"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Sub": "${AWS::StackName}-GraphQlApiId"
              }
            }
          },
          "GraphQlApiUrl": {
            "Value": {
              "Fn::GetAtt": [
                "GraphQlApi",
                "GraphQLUrl"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Sub": "${AWS::StackName}-GraphQlApiUrl"
              }
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "custom": {
      "useDotenv": true,
      "appSync": {
        "name": "book-store-api",
        "authenticationType": "AMAZON_COGNITO_USER_POOLS",
        "schema": "schema.graphql",
        "userPoolConfig": {
          "awsRegion": "us-east-1",
          "defaultAction": "ALLOW",
          "userPoolId": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphQlApi\"][\"Properties\"][\"UserPoolConfig\"][\"UserPoolId\"]"
          }
        },
        "logConfig": {
          "loggingRoleArn": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphQlApi\"][\"Properties\"][\"LogConfig\"][\"CloudWatchLogsRoleArn\"]"
          },
          "level": "ALL",
          "excludeVerboseContent": false
        },
        "xrayEnabled": true,
        "mappingTemplatesLocation": "vtl-mapping-templates",
        "mappingTemplates": [
          {
            "dataSource": "booksSource",
            "type": "Query",
            "field": "getBookById",
            "request": "Query.getBookById.request.vtl",
            "response": "Query.default.response.vtl"
          },
          {
            "dataSource": "booksSource",
            "type": "Mutation",
            "field": "createBook"
          }
        ],
        "dataSources": [
          {
            "type": "AMAZON_DYNAMODB",
            "name": "booksSource",
            "config": {
              "tableName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphQlDsbooksSourceRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][0][\"Resource\"][0][\"Fn::Join\"][1][5][\"Fn::Join\"][1][1]"
              }
            },
            "description": null
          }
        ]
      }
    },
    "plugins": [
      "serverless-dotenv-plugin",
      "serverless-appsync-plugin"
    ],
    "pluginsData": {},
    "functions": {},
    "resources": {
      "Resources": {
        "booksTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "books",
            "AttributeDefinitions": [
              {
                "AttributeName": "bookId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "author",
                "AttributeType": "S"
              },
              {
                "AttributeName": "publishedYear",
                "AttributeType": "S"
              },
              {
                "AttributeName": "volume",
                "AttributeType": "N"
              },
              {
                "AttributeName": "createdAt",
                "AttributeType": "S"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "KeySchema": [
              {
                "AttributeName": "bookId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "createdAt",
                "KeyType": "RANGE"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "byAuthor",
                "KeySchema": [
                  {
                    "AttributeName": "author",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "createdAt",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              },
              {
                "IndexName": "byYear",
                "KeySchema": [
                  {
                    "AttributeName": "publishedYear",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "createdAt",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "LocalSecondaryIndexes": [
              {
                "IndexName": "byVolume",
                "KeySchema": [
                  {
                    "AttributeName": "bookId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "volume",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "Tags": [
              {
                "Key": "Name",
                "Value": "books-table"
              }
            ]
          }
        },
        "ordersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "orders",
            "AttributeDefinitions": [
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "orderId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "bookId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "createdAt",
                "AttributeType": "S"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "orderId",
                "KeyType": "RANGE"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "byOrder",
                "KeySchema": [
                  {
                    "AttributeName": "bookId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "createdAt",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "Tags": [
              {
                "Key": "Name",
                "Value": "orders-table"
              }
            ]
          }
        },
        "cognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "BookStoreUserPool",
            "UsernameAttributes": [
              "email"
            ]
          }
        },
        "cognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "WebApiClient",
            "UserPoolId": {
              "Ref": "cognitoUserPool"
            }
          }
        },
        "cognitoAdminGroup": {
          "Type": "AWS::Cognito::UserPoolGroup",
          "Properties": {
            "Description": "Admins so they can create, read, update and delete records from db",
            "GroupName": "Admin",
            "Precedence": 0,
            "RoleArn": {
              "Fn::GetAtt": [
                "iamRoleForCognitoAdminGroup",
                "Arn"
              ]
            },
            "UserPoolId": {
              "Ref": "cognitoUserPool"
            }
          }
        },
        "iamRoleForCognitoAdminGroup": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "BookStoreAdminRole",
            "Description": "IAM Role For Cognito Admin Group",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Federated": [
                      "cognito-identity.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRoleWithWebIdentity"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "BookStoreAdminPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": "dynamodb:*",
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "booksTable",
                            "Arn"
                          ]
                        },
                        {
                          "Fn::GetAtt": [
                            "ordersTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "cognitoCustomerGroup": {
          "Type": "AWS::Cognito::UserPoolGroup",
          "Properties": {
            "Description": "Customer so they can only read records from db",
            "GroupName": "Customer",
            "Precedence": 1,
            "RoleArn": {
              "Fn::GetAtt": [
                "iamRoleForCognitoCustomerGroup",
                "Arn"
              ]
            },
            "UserPoolId": {
              "Ref": "cognitoUserPool"
            }
          }
        },
        "iamRoleForCognitoCustomerGroup": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "BookStoreCustomerRole",
            "Description": "IAM Role For Cognito Customer Group",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Federated": [
                      "cognito-identity.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRoleWithWebIdentity"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "BookStoreCustomerPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": "dynamodb:*",
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "ordersTable",
                            "Arn"
                          ]
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:GetItem",
                        "dynamodb:Query",
                        "dynamodb:BatchGetItem"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "booksTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "iamRoleForAppSyncCloudWatchLogs": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "AppSyncCloudWatchLogsRole",
            "Description": "IAM Role For Allowing AppSync to push logs to CloudWatch",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "appsync.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "AppSyncCloudWatchLogsPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/appsync-serverless-backend/development/1641150875022-2022-01-02T19:14:35.022Z",
    "artifact": ""
  }
}